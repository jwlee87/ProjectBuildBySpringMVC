<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation=
				"http://www.springframework.org/schema/beans 
				http://www.springframework.org/schema/beans/spring-beans.xsd
				
				http://www.springframework.org/schema/context 
				http://www.springframework.org/schema/context/spring-context.xsd
				
				http://www.springframework.org/schema/mvc
				http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- ============================================================= -->
	<!-- :: 공통적인 사항을 설정한 common-servlet.xml 사용. -->
	<!-- ============================================================= -->
	<context:component-scan base-package="kr.co.playground">
		<context:include-filter 	type="annotation"	expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter 	type="annotation" 	expression="org.springframework.stereotype.Service"/>
		<context:exclude-filter 	type="annotation" 	expression="org.springframework.stereotype.Repository"/>
	</context:component-scan> 
	
	<mvc:annotation-driven />
	
	<!-- ============================================================= -->
	<!-- 인터셉터 처리 -->
	<!-- ============================================================= -->
	<mvc:interceptors>		
		<mvc:interceptor>
			<mvc:mapping path="/web/videoList"/>
			<bean class="kr.co.playground.web.LogonCheckInterceptor" />
		</mvc:interceptor>
		
		<mvc:interceptor>
			<mvc:mapping path="/web/**"/>
			<bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	
	<!-- ============================================================= -->
	<!-- Annotation 지원 HandlerMapping 선언 --> 
	<!-- ============================================================= -->

	<!-- 커뮤니티 -->
	<mvc:resources mapping="/node_modules/**" location="/node_modules/" />
	<mvc:resources mapping="/main/**" location="/main/" />
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/account/**" location="/account/" />
	<mvc:resources mapping="/fileUpload/**" location="/fileUpload/" />
	<mvc:resources mapping="/board/**" location="/board/" />
	
	<!-- 웹뷰 -->
	<mvc:resources mapping="/webView/**" location="/webView/" />
	
	
	<!-- ============================================================= -->
	<!-- ViewResolver 선언 -->
	<!-- ============================================================= -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
	</bean>
	
	
	<!-- 	:: exception resolver  선언 :: 서술적 / 선언적 예외처리 
			:: Servlet 에서의 선언적 예외처리를 다시 생각하며....  
	<bean id="exceptionResolver"
				class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.NullPointerException">/common/nullError.jsp</prop>
				<prop key="java.lang.NumberFormatException">/common/numberFormatError.jsp</prop>
			</props>
		</property>
		
		<property name="defaultErrorView"	value="/common/error.jsp" />
		
	</bean>
	-->
	
	<!-- ============================================================= -->
	<!--  multipartResolver Setting -->
	<!-- ============================================================= -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
		<property name="maxInMemorySize" value="100000000" />
	</bean>
	
	<!-- ============================================================= -->
	<!-- mailSender Setting -->
	<!-- ============================================================= -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="username" value="kingofdayinc@gmail.com" />
		<property name="password" value="Zlddhqmepdl501" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.debug">false</prop>
			</props>
		</property>
	</bean>
	<bean id="email" class="kr.co.playground.domain.Email">
	</bean>
	<bean id="emailSender" class="kr.co.playground.common.EmailSender">
	</bean>
	
	<!-- ============================================================= -->
	<!-- /////// Client 에서 전달되는 JSON Data 를 Domain Object 롤 변환 받기위한 설정 ///////-->
	<!-- ============================================================= -->
	<!-- <bean id="jsonConverter"	class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes" value="application/json" />
	</bean> -->
	
	<!-- ============================================================= -->
	<!-- /////// AnnotationMethodHandlerAdapter 에 jsonConverer  DI /////// -->
	<!-- ============================================================= -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonConverter"/>
			</list>
		</property>	 
	</bean> -->
	
	
</beans>